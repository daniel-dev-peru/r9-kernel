/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) ({{{generatorVersion}}}).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package {{package}};


import javax.ws.rs.*;
import javax.ws.rs.core.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.eclipse.microprofile.openapi.annotations.parameters.RequestBody;
import org.jboss.resteasy.annotations.SseElementType;

{{#imports}}import {{import}};
{{/imports}}

{{#useBeanValidation}}
import javax.validation.Valid;
{{/useBeanValidation}}

import io.smallrye.mutiny.Multi;
import io.smallrye.mutiny.Uni;

{{#useBeanValidation}}
import javax.validation.Valid;
import javax.validation.constraints.*;
{{/useBeanValidation}}

{{#jdk8-no-delegate}}
import java.util.Optional;
{{/jdk8-no-delegate}}

import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import pe.com.eberos.fm.utils.core.extension.metadata.HttpDataCurrent;

/*

{{contextPath}}

*/
//{{>generatedAnnotation}}
{{#useBeanValidation}}
//@Validated
{{/useBeanValidation}}

//@Api(value = "{{{baseName}}}", description = "the {{{baseName}}} API")
{{#operations}}

@Slf4j
@Path("/")
public class {{classname}} {
{{#jdk8-default-interface}}
    
    {{#isDelegate}}

    @Inject
    {{classname}}Delegate {{baseName}}ApiDelegate;


    @Inject
    HttpDataCurrent httpDataCurrent;

    {{classname}}Delegate getDelegate() {
        return {{baseName}}ApiDelegate;
    }
    {{/isDelegate}}
{{/jdk8-default-interface}}
{{#operation}}

    /**
     * {{httpMethod}} {{{path}}}{{#summary}} : {{.}}{{/summary}}
    {{#notes}}
     * {{.}}
    {{/notes}}
     *
    {{#allParams}}
     * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}
    {{/allParams}}
     * @return {{#responses}}{{message}} (status code {{code}}){{^-last}}
     *         or {{/-last}}{{/responses}}
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
    {{#externalDocs}}
     * {{description}}
     * @see <a href="{{url}}">{{summary}} Documentation</a>
    {{/externalDocs}}
     */
    @{{httpMethod}}
    @Path("{{{path}}}"{{#singleContentTypes}}{{#hasProduces}})
    @Consumes(value = "{{{vendorExtensions.x-accepts}}}"{{/hasProduces}}{{#hasConsumes}})
    @Produces(value = "{{{vendorExtensions.x-contentType}}}"{{/hasConsumes}}{{/singleContentTypes}}{{^singleContentTypes}}{{#hasProduces}})
    @Consumes(value = { {{#produces}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/produces}} }{{/hasProduces}}{{#hasConsumes}})
    @Produces(value = { {{#consumes}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/consumes}} }{{/hasConsumes}}{{/singleContentTypes}})
    public {{#jdk8-default-interface}} {{/jdk8-default-interface}} {{>returnTypes}} {{#delegate-method}}_{{/delegate-method}}{{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{>cookieParams}}{{^-last}},{{/-last}}{{#-last}}{{#reactive}} {{/reactive}}{{/-last}}{{/allParams}}){{^jdk8-default-interface}};{{/jdk8-default-interface}}{{#jdk8-default-interface}}{{#unhandledException}} throws Exception{{/unhandledException}} {
        {{#delegate-method}}
        return {{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});
    }

    // Override this method
    public {{#jdk8-default-interface}} {{/jdk8-default-interface}} {{>returnTypes}} {{operationId}}({{#allParams}}{{^isFile}}{{^isBodyParam}}{{>optionalDataType}}{{/isBodyParam}}{{#isBodyParam}}{{^reactive}}{{{dataType}}}{{/reactive}}{{#reactive}}{{^isArray}}Uni<{{{dataType}}}>{{/isArray}}{{#isArray}}Multi<{{{baseType}}}>{{/isArray}}{{/reactive}}{{/isBodyParam}}{{/isFile}}{{#isFile}}{{#reactive}}Flux<Part>{{/reactive}}{{^reactive}}MultipartFile{{/reactive}}{{/isFile}} {{paramName}}{{^-last}}, {{/-last}}{{/allParams}}{{#reactive}}{{#hasParams}}, {{/hasParams}}@springfox.documentation.annotations.ApiIgnore final ServerWebExchange exchange{{/reactive}}{{#vendorExtensions.x-spring-paginated}}, @springfox.documentation.annotations.ApiIgnore final org.springframework.data.domain.Pageable pageable{{/vendorExtensions.x-spring-paginated}}){{#unhandledException}} throws Exception{{/unhandledException}} {
        {{/delegate-method}}
        log.info("{{operationId}} start");
        {{^isDelegate}}
        {{>methodBody}}
        {{/isDelegate}}
        {{#isDelegate}}
        return getDelegate().{{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});
        {{/isDelegate}}
    }{{/jdk8-default-interface}}

{{/operation}}
}
{{/operations}}
