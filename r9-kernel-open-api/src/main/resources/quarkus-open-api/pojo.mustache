/**
* {{description}}{{^description}}{{classname}}{{/description}}
*/
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import com.fasterxml.jackson.annotation.JsonProperty;

{{#vendorExtensions.x-java-r9-header}}import org.raise9.kernel.utils.core.metadata.HeaderMetadata;{{/vendorExtensions.x-java-r9-header}}

@AllArgsConstructor
@NoArgsConstructor
@Setter
@Builder
@Getter
{{>generatedAnnotation}}{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}{{>additionalModelTypeAnnotations}}



public class {{classname}} {{#vendorExtensions.x-java-r9-header}} extends HeaderMetadata {{/vendorExtensions.x-java-r9-header}} {{^vendorExtensions.x-java-r9-header}} {{#parent}} extends {{{.}}}{{/parent}}{{^parent}}{{#hateoas}}extends RepresentationModel<{{classname}}> {{/hateoas}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {{/vendorExtensions.x-java-r9-header}} {
{{#serializableModel}}
    private static final long serialVersionUID = 1L;

{{/serializableModel}}
{{#vars}}
    {{#isEnum}}
        {{^isContainer}}
            {{>enumClass}}
        {{/isContainer}}
        {{#isContainer}}
            {{#mostInnerItems}}
                {{>enumClass}}
            {{/mostInnerItems}}
        {{/isContainer}}
    {{/isEnum}}
    {{#jackson}}
        @JsonProperty("{{baseName}}"){{#withXml}}
            @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace="{{.}}", {{/xmlNamespace}}localName = "{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}"){{/withXml}}
    {{/jackson}}
    {{#gson}}
        @SerializedName("{{baseName}}")
    {{/gson}}
    {{#isContainer}}
        {{#useBeanValidation}}@Valid{{/useBeanValidation}}
        {{#openApiNullable}}
            private {{>nullableDataType}} {{name}} = {{#isNullable}}JsonNullable.undefined(){{/isNullable}}{{^isNullable}}{{#required}}{{{defaultValue}}}{{/required}}{{^required}}null{{/required}}{{/isNullable}};
        {{/openApiNullable}}
        {{^openApiNullable}}
            private {{>nullableDataType}} {{name}} = {{#required}}{{{defaultValue}}}{{/required}}{{^required}}null{{/required}};
        {{/openApiNullable}}
    {{/isContainer}}
    {{^isContainer}}
        {{#isDate}}
            @org.springframework.format.annotation.DateTimeFormat(iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE)
        {{/isDate}}
        {{#isDateTime}}
            @org.springframework.format.annotation.DateTimeFormat(iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE_TIME)
        {{/isDateTime}}
        {{#openApiNullable}}
            private {{>nullableDataType}} {{name}}{{#isNullable}} = JsonNullable.undefined(){{/isNullable}}{{^isNullable}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/isNullable}};
        {{/openApiNullable}}
        {{^openApiNullable}}
            private {{>nullableDataType}} {{name}}{{#isNullable}} = null{{/isNullable}}{{^isNullable}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/isNullable}};
        {{/openApiNullable}}
    {{/isContainer}}

{{/vars}}
{{#vars}}
    public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    {{#openApiNullable}}
        this.{{name}} = {{#isNullable}}JsonNullable.of({{name}}){{/isNullable}}{{^isNullable}}{{name}}{{/isNullable}};
    {{/openApiNullable}}
    {{^openApiNullable}}
        this.{{name}} = {{name}};
    {{/openApiNullable}}
    return this;
    }
    {{#isArray}}

        public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
        {{#openApiNullable}}
            {{^required}}
                if (this.{{name}} == null{{#isNullable}} || !this.{{name}}.isPresent(){{/isNullable}}) {
                this.{{name}} = {{#isNullable}}JsonNullable.of({{{defaultValue}}}){{/isNullable}}{{^isNullable}}{{{defaultValue}}}{{/isNullable}};
                }
            {{/required}}
            this.{{name}}{{#isNullable}}.get(){{/isNullable}}.add({{name}}Item);
        {{/openApiNullable}}
        {{^openApiNullable}}
            if (this.{{name}} == null) {
            this.{{name}} = {{{defaultValue}}};
            }
            this.{{name}}.add({{name}}Item);
        {{/openApiNullable}}
        return this;
        }
    {{/isArray}}
    {{#isMap}}

        public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
        {{^required}}
            if (this.{{name}} == null) {
            this.{{name}} = {{{defaultValue}}};
            }
        {{/required}}
        this.{{name}}.put(key, {{name}}Item);
        return this;
        }
    {{/isMap}}

    /**
    {{#description}}
        * {{{.}}}
    {{/description}}
    {{^description}}
        * Get {{name}}
    {{/description}}
    {{#minimum}}
        * minimum: {{.}}
    {{/minimum}}
    {{#maximum}}
        * maximum: {{.}}
    {{/maximum}}
    * @return {{name}}
    */

    {{#vendorExtensions.x-extra-annotation}}
        {{{vendorExtensions.x-extra-annotation}}}
    {{/vendorExtensions.x-extra-annotation}}

    {{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}


{{/vars}}

}
