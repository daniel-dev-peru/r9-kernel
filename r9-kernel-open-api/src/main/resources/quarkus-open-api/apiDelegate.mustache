package {{package}};


import javax.ws.rs.*;
import javax.ws.rs.core.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.eclipse.microprofile.openapi.annotations.parameters.RequestBody;
import org.jboss.resteasy.annotations.SseElementType;
import io.quarkus.arc.DefaultBean;
import io.smallrye.mutiny.Uni;
import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.context.Dependent;
import javax.inject.Inject;

{{#imports}}import {{import}};
{{/imports}}

{{#useBeanValidation}}
    import javax.validation.Valid;
{{/useBeanValidation}}

import io.smallrye.mutiny.Multi;
import io.smallrye.mutiny.Uni;
import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.context.Dependent;
import javax.inject.Inject;
import javax.ws.rs.Produces;


import io.quarkus.arc.DefaultBean;
import javax.enterprise.context.Dependent;

{{#useBeanValidation}}
    import javax.validation.Valid;
    import javax.validation.constraints.*;
{{/useBeanValidation}}

import javax.enterprise.context.ApplicationScoped;

{{#jdk8-no-delegate}}
    import java.util.Optional;
{{/jdk8-no-delegate}}


{{#operations}}
    /**
    * A delegate to be called by the {@link {{classname}}Controller}}.
    {{contextPath}}
    */

    {{>generatedAnnotation}}

    @Slf4j
    @Dependent
    @Produces
    @DefaultBean

    class {{classname}}Resource implements {{classname}}Delegate{
    {{#jdk8-default-interface}}

    {{/jdk8-default-interface}}

    {{#operation}}

        {{#vendorExtensions.x-java-r9-data-driven}}
            @Inject
            {{#vendorExtensions.x-java-r9-data-driven-class-invoke}}{{{.}}}{{/vendorExtensions.x-java-r9-data-driven-class-invoke}} {{#vendorExtensions.x-java-r9-data-driven-class-var}}{{{.}}}{{/vendorExtensions.x-java-r9-data-driven-class-var}};
        {{/vendorExtensions.x-java-r9-data-driven}}

        /**
        * {{httpMethod}} {{{path}}}{{#summary}} : {{.}}{{/summary}}
        {{#notes}}
            * {{.}}
        {{/notes}}
        *
        {{#allParams}}
            * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}
        {{/allParams}}
        * @return {{#responses}}{{message}} (status code {{code}}){{^-last}}
            *         or {{/-last}}{{/responses}}
        {{#isDeprecated}}
            * @deprecated
        {{/isDeprecated}}
        {{#externalDocs}}
            * {{description}}
            * @see <a href="{{url}}">{{summary}} Documentation</a>
        {{/externalDocs}}
        * @see {{classname}}#{{operationId}}
        */
        public {{>returnTypes}} {{operationId}}(
        {{#vendorExtensions.x-java-r9-header}}
            {{#vendorExtensions.x-java-r9-header-instance}}{{{.}}}{{/vendorExtensions.x-java-r9-header-instance}} ,
        {{/vendorExtensions.x-java-r9-header}}

        {{#allParams}}{{^isFile}}{{^isBodyParam}}{{>optionalDataType}}{{/isBodyParam}}{{#isBodyParam}}{{^reactive}}{{{dataType}}}{{/reactive}}{{#reactive}}{{^isArray}}{{{dataType}}}{{/isArray}}{{#isArray}}{{{baseType}}}{{/isArray}}{{/reactive}}{{/isBodyParam}}{{/isFile}}{{#isFile}}{{/isFile}} {{paramName}}{{^-last}}, {{/-last}}{{/allParams}} ) {{#unhandledException}} throws Exception{{/unhandledException}}
        {
        {{>methodBody}}
        }

    {{/operation}}
    }



{{/operations}}


@Slf4j
class {{classname}}DelegateConfiguration {

    /*@Dependent
    @Produces
    @DefaultBean
    public {{classname}}Delegate {{baseName}}ApiDelegate() {
        log.info("Bean {{classname}}Delegate");
        return new {{classname}}Delegate() {};
    }*/

}


{{#operations}}
    /**
    * A delegate to be called by the {@link {{classname}}Controller}}.
    {{contextPath}}
    */
    {{>generatedAnnotation}}
    public interface {{classname}}Delegate {

    {{#operation}}
        /**
        * {{httpMethod}} {{{path}}}{{#summary}} : {{.}}{{/summary}}
        {{#notes}}
            * {{.}}
        {{/notes}}
        *
        {{#allParams}}
        * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}
        {{/allParams}}
        * @return {{#responses}}{{message}} (status code {{code}}){{^-last}}
        *         or {{/-last}}{{/responses}}
        {{#isDeprecated}}
        * @deprecated
        {{/isDeprecated}}
        {{#externalDocs}}
        * {{description}}
        * @see <a href="{{url}}">{{summary}} Documentation</a>
        {{/externalDocs}}
        * @see {{classname}}#{{operationId}}
        */
        {{>returnTypes}} {{operationId}}(
        {{#vendorExtensions.x-java-r9-header}}
            {{#vendorExtensions.x-java-r9-header-instance}}{{{.}}}{{/vendorExtensions.x-java-r9-header-instance}} ,
        {{/vendorExtensions.x-java-r9-header}}

        {{#allParams}}{{^isFile}}{{^isBodyParam}}{{>optionalDataType}}{{/isBodyParam}}{{#isBodyParam}}{{^reactive}}{{{dataType}}}{{/reactive}}{{#reactive}}{{^isArray}}{{{dataType}}}{{/isArray}}{{#isArray}}{{{baseType}}}{{/isArray}}{{/reactive}}{{/isBodyParam}}{{/isFile}}{{#isFile}}{{/isFile}} {{paramName}}{{^-last}}, {{/-last}}{{/allParams}} ) {{#unhandledException}} throws Exception{{/unhandledException}};

    {{/operation}}
    }



{{/operations}}

